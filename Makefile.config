PROJECT := isage

BUILD_DIR := build

__SYSTEM_INCLUDE_DIR := /usr/local/include
__SYSTEM_LIB_DIR := /usr/local/lib

#############################
######## CONCRETE ###########
#############################
CONCRETE_CPP_DIR := $(HOME)/code/concrete/concrete-cpp

#############################
######### THRIFT ############
#############################
THRIFT_INCLUDE_DIR := $(__SYSTEM_INCLUDE_DIR)
THRIFT_LIB_DIR := $(__SYSTEM_LIB_DIR)

#############################
########## BOOST ############
#############################
BOOST_INCLUDE_DIR := $(__SYSTEM_INCLUDE_DIR)
BOOST_LIB_DIR := $(__SYSTEM_LIB_DIR)

#############################
############ GSL ############
#############################
GSL_INCLUDE_DIR := $(__SYSTEM_INCLUDE_DIR)
GSL_LIB_DIR := $(__SYSTEM_LIB_DIR)

#############################
########## GTEST ############
#############################
GTEST_DIR := /home/fferraro/util/gtest/gtest-1.7.0

######################################################################
######################################################################
######################################################################
######### YOU (MOST LIKELY) DO NOT NEED TO CHANGE BELOW HERE #########
######################################################################
######################################################################
######################################################################

CONCRETE_CORE_DIR := $(CONCRETE_CPP_DIR)/core
CONCRETE_INCLUDE_DIR := $(CONCRETE_CORE_DIR)/include
# where to find the shared object
CONCRETE_LIB_DIR := $(CONCRETE_CORE_DIR)/lib
CONCRETE_UTIL_DIR := $(CONCRETE_CPP_DIR)/util
CONCRETE_UTIL_INCLUDE_DIR := $(CONCRETE_UTIL_DIR)/include
# where to find the shared object
CONCRETE_UTIL_LIB_DIR := $(CONCRETE_UTIL_DIR)/lib

CONCRETE_SO := $(CONCRETE_LIB_DIR)/concrete.so
# First we're going to define C++ compiler flags
# the HAVE_CONFIG_H is to get TCompactProtocol working
# note that we add -shared and -fPIC later on
CXX_THRIFT_FLAGS := -DHAVE_NETINET_IN_H -DHAVE_INTTYPES_H -DHAVE_CONFIG_H \
		 $(THRIFT_INC)
CXX_BOOST_FLAGS := -DBOOST_LOG_DYN_LINK
LITTLE_Ls := thrift thriftz z pthread boost_log gsl gslcblas gsl gslcblas m boost_program_options boost_serialization boost_system boost_filesystem boost_iostreams

#############################
########## COLORS ###########
#############################
NO_COLOR=\033[0m
STATUS_COLOR=\033[34;01m
MAGENTA_COLOR=\033[35;01m
OK_COLOR=\033[32;01m
ERROR_COLOR=\033[31;01m
WARN_COLOR=\033[33;01m

OK_STRING=$(OK_COLOR)[OK]$(NO_COLOR)
ERROR_STRING=$(ERROR_COLOR)[ERROR]$(NO_COLOR)
WARN_STRING=$(WARN_COLOR)[WARNING]$(NO_COLOR)

ECHO :=echo

verify_exist = @if [ ! -e "$(1)" ]; then \
echo "$(ERROR_STRING) File $(MAGENTA_COLOR)$(1)$(NO_COLOR) does not exist" ; \
exit 1; \
fi

ifeq ("$(shell echo "int main(){}" | $(CXX) -fdiagnostics-color -x c - -o /dev/null 2>&1)", "")
     override CXXFLAGS += -fdiagnostics-color
else ifeq ("$(shell echo "int main(){}" | $(CXX) -fcolor-diagnostics -x c - -o /dev/null 2>&1)", "")
     override CXXFLAGS += --fdiagnostics-color
endif

## https://gist.github.com/vmrob/8924878
# AWK_CMD = awk '{ printf "%-30s %-10s\n",$$1, $$2; }'
# PRINT_ERROR = printf "$@ $(ERROR_STRING)\n" | $(AWK_CMD) && printf "$(1)\n$$LOG\n" && false
# PRINT_WARNING = printf "$@ $(WARN_STRING)\n" | $(AWK_CMD) && printf "$(1)\n$$LOG\n"
# PRINT_OK = printf "$@ $(OK_STRING)\n" | $(AWK_CMD)
# __CXX = $(CXX)
# __CXX_CALL = LOG=$$($(1) 2>&1) ; if [ $$? -eq 1 ]; then $(PRINT_ERROR); elif [ "$$LOG" != "" ] ; then $(PRINT_WARNING); else $(PRINT_OK); fi;
# CXX = 
